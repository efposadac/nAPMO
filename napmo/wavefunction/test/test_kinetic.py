# file: test_kinetic.py
# nAPMO package
# Copyright (c) 2021, Edwin Fernando Posada
# All rights reserved.
# Version: 2.0
# fernando.posada@temple.edu

import numpy as np
import napmo

test = """
3.5435000035414923        3.5434550326631848        3.5432586744170855        3.5427240249106839
3.5415797605535144        3.5394603379501581        3.5358932552792708        3.5302833986649058
3.5218946750737601        3.5098294621677208        3.4930069601659595        3.4701424122398934
3.4397304957650481        3.4000381192877738        3.3491145095693819        3.2848298499238120
3.2049575576948923        3.1073186776313628        2.9900078088223427        2.8517146684545129
2.6921376697204398        2.5124477103454996        2.3156952812994764        2.1069669437971252
1.8930233100482596        1.6811775186209945        1.4774364000980100        1.2845100102812261
1.1009812823840073        0.92296651459773460       0.74812389260778256       0.57940402453003836
0.42517955578549760       0.29507206417373716       0.19426982858098799       0.12056144897973380
6.7401211233059144E-002   3.0584395510099144E-002   9.5442158620169405E-003   1.5834731267831022E-003
8.8971098090469841E-005   7.1390273222658175E-007   1.3874777985756464E-010   1.2432478244312138E-017
2.7573454818212794E-032   9.7625762943178198E-067   2.8870994061533822E-163   0.0000000000000000
0.0000000000000000        0.0000000000000000
"""
rdat = """
5.0226280914746524E-004 2.0128708010486813E-003 4.5433445281719814E-003 8.1130928327705666E-003
1.2749730838578131E-002 1.8489537628088734E-002 2.5378066741005650E-002 3.3470927351012515E-002
4.2834759508288613E-002 5.3548433453876616E-002 6.5704511071897384E-002 7.9411017499725317E-002
9.4793583354544297E-002 0.11199803373446834     0.13119352014805236     0.15257631720697751
0.17637443916598439     0.20285327478626985     0.23232249608533598     0.26514457226323945
0.30174532141571636     0.34262706943494153     0.38838517193811184     0.43972891174348244
0.49750814159944151     0.56274754463305299     0.63669110136510954     0.72086038641210470
0.81713183252498445     0.92784035161334133     1.0559201070202533      1.2050984723287441
1.3801674408018423      1.5873699524938556      1.8349603021302689      2.1340344005107155
2.4997892890138815      2.9534856180391236      3.5256000229566142      4.2610694540239429
5.2283786296230375      6.5360816386949807      8.3646169161659607      11.032025724310419
15.142157189194270      21.959011422649503      34.508601206826938      61.622332047244733
139.09063859150208      557.42029873820456
"""
gold = """
-71.034355399936871       -71.016050203286966       -71.005605914506219       -70.976092479483242
-70.912984862391923       -70.796142628801817       -70.599642197251427       -70.290991681226785
-69.830319342096388       -69.169584062535989       -68.251952710484090       -67.011570304135574
-65.374067809702723       -63.258310560432591       -60.580083576338339       -57.258613120309747
-53.226968842220899       -48.447334291132016       -42.931614457409978       -36.766458788440090
-30.139003674118825       -23.355112918957772       -16.836078784165966       -11.075226833997515
-6.5389246484876695       -3.5168868689863957       -1.9707493973665282       -1.4820558021482719
-1.4030074846398823       -1.1906413146618864       -0.69405565213086773      -0.12318405694738133
 0.25394379499025788       0.34620478955422535       0.24845363350807056       0.12486456777987477
 6.7164997969668891E-002   4.9774247771689623E-002   2.8720881261206962E-002   8.3488989166543796E-003
 7.9922527115093372E-004   4.3658455713341122E-006   1.0972779326281192E-006  -3.0557952986390764E-008
-3.2951333634906203E-009  -9.1659909988716497E-012   2.7724006651174635E-022   1.2230858992693070E-022
-5.6942344611458393E-023   9.2730824319967956E-024
"""


def test_kinetic():

    R = np.fromstring(test, sep=" ")
    rad = np.fromstring(rdat, sep=" ")
    ref = np.fromstring(gold, sep=" ")

    rgrid = napmo.RadialGrid(50, 'He')
    assert(np.allclose(rgrid.points, rad))
    assert(rgrid.size == 50)

    res = rgrid.deriv2(R)
    assert(np.allclose(ref, res))


if __name__ == '__main__':
    test_kinetic()
